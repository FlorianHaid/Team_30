plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id "org.jetbrains.kotlin.kapt"
    id "com.google.secrets_gradle_plugin" version "0.6"
}

apply plugin: 'com.android.application'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: "androidx.navigation.safeargs.kotlin"

android {
    compileSdkVersion 29
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "at.team30.setroute"
        minSdkVersion 26
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "at.team30.setroute.CustomTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    packagingOptions {
        exclude 'META-INF/NOTICE.md'
        exclude 'META-INF/LICENSE.md'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'com.google.android.gms:play-services-location:18.0.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.3'


    // Dependency Injection
    implementation 'com.google.dagger:hilt-android:2.33-beta'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    implementation 'com.google.dagger:hilt-android:2.35.1'
    kapt 'com.google.dagger:hilt-compiler:2.35.1'

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:2.3.5"
    implementation "androidx.navigation:navigation-ui-ktx:2.3.5"
    implementation "androidx.navigation:navigation-dynamic-features-fragment:2.3.5"
    implementation "androidx.navigation:navigation-compose:1.0.0-alpha10"

    // Locale
    implementation 'com.zeugmasolutions.localehelper:locale-helper-android:1.1.4'

    // Testing
    testImplementation 'junit:junit:4.13.2'
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    androidTestImplementation 'com.android.support:support-annotations:28.0.0'

    // Testing hilt
    testImplementation 'com.google.dagger:hilt-android-testing:2.35.1'
    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.35.1'
    androidTestImplementation  'com.google.dagger:hilt-android-testing:2.35.1'

    // Mock
    testImplementation "io.mockk:mockk:1.11.0"
    androidTestImplementation "io.mockk:mockk-android:1.11.0"
    // Stupid workaround to get mockk to work with API 29 devices
    implementation 'com.github.wseemann:FFmpegMediaMetadataRetriever-native:1.0.15'
    //htttp request lib
    implementation("com.squareup.okhttp3:okhttp:4.9.0")

    // Email
    implementation 'com.sun.mail:android-mail:1.6.7'
    implementation 'com.sun.mail:android-activation:1.6.7'
}

String getApiKey() {
    def propFile = rootProject.file("./local.properties")
    def properties = new Properties()
    properties.load(new FileInputStream(propFile))
    return properties['MAPS_API_KEY']
}

// Improved test output
// Source: https://badvertex.com/2018/04/26/gradle-test-output.html
tasks.withType(Test) {
    testLogging {
        exceptionFormat "full"
        showCauses true
        showExceptions true
        showStackTraces true
        showStandardStreams true
        events = ["passed", "skipped", "failed", "standardOut", "standardError"]
    }
}
